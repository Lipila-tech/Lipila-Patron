# coding: utf-8

"""
    Payments V1

    To facilitate the capability for consumers to make a payment or refund to service providers.

    The version of the OpenAPI document: v1.0
    Contact: developer-support@mtn.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.promise_to_pay_response import PromiseToPayResponse

class TestPromiseToPayResponse(unittest.TestCase):
    """PromiseToPayResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PromiseToPayResponse:
        """Test PromiseToPayResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PromiseToPayResponse`
        """
        model = PromiseToPayResponse()
        if include_optional:
            return PromiseToPayResponse(
                status_code = '0000',
                status_message = '',
                transaction_id = '5345345',
                sequence_no = '12345',
                data = openapi_client.models.promise_to_pay_response_data.promiseToPayResponse_data(
                    promise_details = [
                        openapi_client.models.promise_detail.PromiseDetail(
                            installment_due_amount = '266.67', 
                            installment_end_date = '2020-08-12T11:04:53.668Z', 
                            query_number = 'FT172145YB21', 
                            installment_start_date = '2020-08-12T11:04:53.668Z', )
                        ], ),
                links = openapi_client.models.response_links.Response_Links(
                    self = openapi_client.models.response_links_self.Response_Links_Self(
                        href = 'https://host:port/payments/payment-agreement/', ), )
            )
        else:
            return PromiseToPayResponse(
        )
        """

    def testPromiseToPayResponse(self):
        """Test PromiseToPayResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

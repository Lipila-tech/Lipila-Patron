# coding: utf-8

"""
    Payments V1

    To facilitate the capability for consumers to make a payment or refund to service providers.

    The version of the OpenAPI document: v1.0
    Contact: developer-support@mtn.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.payee import Payee

class TestPayee(unittest.TestCase):
    """Payee unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Payee:
        """Test Payee
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Payee`
        """
        model = Payee()
        if include_optional:
            return Payee(
                amount = openapi_client.models.money_type.MoneyType(
                    amount = 50.0, 
                    units = 'XOF', ),
                tax_amount = openapi_client.models.money_type.MoneyType(
                    amount = 50.0, 
                    units = 'XOF', ),
                total_amount = openapi_client.models.money_type.MoneyType(
                    amount = 50.0, 
                    units = 'XOF', ),
                payee_id_type = 'USER',
                payee_id = 'AYO.DEPOSIT',
                payee_note = 'Manual Boost for RWC',
                payee_name = ''
            )
        else:
            return Payee(
                total_amount = openapi_client.models.money_type.MoneyType(
                    amount = 50.0, 
                    units = 'XOF', ),
        )
        """

    def testPayee(self):
        """Test Payee"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

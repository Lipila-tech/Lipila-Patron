CREATE TABLE "User" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "username" integer UNIQUE,
  "email" varchar UNIQUE,
  "password" varchar
);

CREATE TABLE "CreatorProfile" (
  "user_id" integer PRIMARY KEY,
  "profile_image" image,
  "creator_title" varchar UNIQUE,
  "creator_category" varchar,
  "created_at" timestamp
);

CREATE TABLE "PatronProfile" (
  "user_id" integer PRIMARY KEY,
  "profile_image" image,
  "city" varchar,
  "created_at" timestamp
);

CREATE TABLE "Subscriptions" (
  "id" integer PRIMARY KEY,
  "sub_title" varchar(55),
  "sub_description" text(300),
  "creator_id" integer,
  "amount" float DEFAULT 10
);

CREATE TABLE "Products" (
  "id" integer PRIMARY KEY,
  "product_name" varchar(100),
  "product_description" text(300),
  "product_category" varchar,
  "creator_id" integer,
  "file_url" binary,
  "created_at" timestamp
);

CREATE TABLE "Payments" (
  "id" integer PRIMARY KEY,
  "type" varchar,
  "amount" float,
  "status" varchar,
  "created_at" timestamp,
  "updated_at" timestamp
);

CREATE TABLE "PatronSubscriptionPayments" (
  "id" int PRIMARY KEY,
  "patron_id" integer,
  "subscription_id" integer,
  "payment_id" integer
);

CREATE TABLE "LipilaTransactions" (
  "id" integer PRIMARY KEY,
  "payer_id" integer,
  "payee_id" integer,
  "status" varchar,
  "description" text,
  "type" varchar,
  "amount" float,
  "payer_account" varchar,
  "payee_account" varchar,
  "reference_id" varchar,
  "created_at" timestamp,
  "updated_at" timestamp
);

CREATE TABLE "BankDetails" (
  "id" integer PRIMARY KEY,
  "user_id" integer,
  "bank_name" varchar(100),
  "account_name" varchar(100),
  "account_number" varchar(30),
  "account_type" varchar
);

CREATE TABLE "PatronSubscriptions" (
  "id" integer PRIMARY KEY,
  "patron_id" integer,
  "sub_id" integer
);

CREATE TABLE "ProductPayments" (
  "id" integer PRIMARY KEY,
  "patron_id" integer,
  "product_id" int,
  "payment_id" int
);

COMMENT ON COLUMN "User"."password" IS 'hashed';

COMMENT ON TABLE "CreatorProfile" IS 'Stores users that register as creators.';

COMMENT ON COLUMN "CreatorProfile"."profile_image" IS 'a creators profile pic.';

COMMENT ON COLUMN "CreatorProfile"."creator_category" IS 'options include the type of content she creates.';

COMMENT ON TABLE "PatronProfile" IS 'Stores users that register as patrons.';

COMMENT ON COLUMN "PatronProfile"."profile_image" IS 'a patrons profile pic.';

COMMENT ON COLUMN "PatronProfile"."city" IS 'town where the patron lives.';

COMMENT ON TABLE "Subscriptions" IS 'stores Subscriptions a creator supports and a patron can join.';

COMMENT ON COLUMN "Subscriptions"."creator_id" IS 'fk';

COMMENT ON TABLE "Products" IS 'Stores a creators products.';

COMMENT ON COLUMN "Products"."product_category" IS 'Video Music E-book';

COMMENT ON COLUMN "Products"."creator_id" IS 'fk';

COMMENT ON COLUMN "Payments"."type" IS 'contribution sale subscription';

COMMENT ON COLUMN "Payments"."status" IS 'pending, completed, failed.';

COMMENT ON TABLE "LipilaTransactions" IS 'The transactions performed by lipila, withdraw, deposit.';

COMMENT ON COLUMN "LipilaTransactions"."payer_id" IS 'user_id fk';

COMMENT ON COLUMN "LipilaTransactions"."payee_id" IS 'creator.user_id fk';

COMMENT ON COLUMN "LipilaTransactions"."status" IS 'pending, completed, failed.';

COMMENT ON COLUMN "LipilaTransactions"."type" IS 'collection, disbursement';

COMMENT ON TABLE "BankDetails" IS 'Stores a lipila users bank details.';

COMMENT ON COLUMN "BankDetails"."user_id" IS 'fk';

COMMENT ON COLUMN "BankDetails"."bank_name" IS 'Bank or Momo provider.';

COMMENT ON COLUMN "BankDetails"."account_name" IS 'the names of the account holder.';

COMMENT ON COLUMN "BankDetails"."account_type" IS 'Bank, Momo';

COMMENT ON TABLE "PatronSubscriptions" IS 'linking table between patrns and subscriptions.';

COMMENT ON COLUMN "PatronSubscriptions"."patron_id" IS 'fk';

COMMENT ON COLUMN "PatronSubscriptions"."sub_id" IS 'fk';

ALTER TABLE "CreatorProfile" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("id");

ALTER TABLE "PatronProfile" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("id");

ALTER TABLE "LipilaTransactions" ADD FOREIGN KEY ("payer_id") REFERENCES "User" ("id");

ALTER TABLE "BankDetails" ADD FOREIGN KEY ("user_id") REFERENCES "User" ("id");

ALTER TABLE "Subscriptions" ADD FOREIGN KEY ("creator_id") REFERENCES "CreatorProfile" ("user_id");

ALTER TABLE "LipilaTransactions" ADD FOREIGN KEY ("payee_id") REFERENCES "CreatorProfile" ("user_id");

ALTER TABLE "PatronSubscriptions" ADD FOREIGN KEY ("patron_id") REFERENCES "PatronProfile" ("user_id");

ALTER TABLE "PatronSubscriptions" ADD FOREIGN KEY ("sub_id") REFERENCES "Subscriptions" ("id");

ALTER TABLE "Products" ADD FOREIGN KEY ("creator_id") REFERENCES "CreatorProfile" ("user_id");

ALTER TABLE "PatronSubscriptionPayments" ADD FOREIGN KEY ("patron_id") REFERENCES "PatronProfile" ("user_id");

ALTER TABLE "PatronSubscriptionPayments" ADD FOREIGN KEY ("subscription_id") REFERENCES "Subscriptions" ("id");

ALTER TABLE "PatronSubscriptionPayments" ADD FOREIGN KEY ("payment_id") REFERENCES "Payments" ("id");

ALTER TABLE "ProductPayments" ADD FOREIGN KEY ("patron_id") REFERENCES "PatronProfile" ("user_id");

ALTER TABLE "ProductPayments" ADD FOREIGN KEY ("product_id") REFERENCES "Products" ("id");

ALTER TABLE "ProductPayments" ADD FOREIGN KEY ("payment_id") REFERENCES "Payments" ("id");

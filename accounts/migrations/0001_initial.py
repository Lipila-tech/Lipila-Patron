# Generated by Django 5.0.1 on 2024-09-05 09:15

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_creator', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('has_group', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CreatorProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('patron_title', models.CharField(max_length=150, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_patron_title', message='Patron title must be alphanumeric or contain dashes(-) only.', regex='^[a-zA-Z0-9\\-]+$')])),
                ('is_verified', models.BooleanField(default=False)),
                ('creator_id_file', models.FileField(blank=True, null=True, upload_to='creator_ids/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])], verbose_name='Creator ID')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='img/creators/')),
                ('about', models.TextField(blank=True, max_length=150, null=True)),
                ('location', models.CharField(choices=[('01', 'Central'), ('02', 'Copperbelt'), ('03', 'Eastern'), ('04', 'Luapula'), ('05', 'Lusaka'), ('06', 'Muchinga'), ('07', 'Northern'), ('08', 'North-Western'), ('09', 'Southern'), ('10', 'Western')], default='Central', max_length=50)),
                ('adults_group', models.BooleanField(default=False)),
                ('country', models.CharField(blank=True, default='Zambia', max_length=50)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('creator_category', models.CharField(choices=[('', ''), ('artist', 'Artist'), ('musician', 'Musician'), ('videocreator', 'Video Creator'), ('podcaster', 'Podcaster'), ('other', 'Other')], default='', max_length=50)),
                ('facebook_url', models.URLField(blank=True, default='https://facebook.com', null=True)),
                ('twitter_url', models.URLField(blank=True, default='https://twitter.com', null=True)),
                ('instagram_url', models.URLField(blank=True, default='https://instagram.com', null=True)),
                ('linkedin_url', models.URLField(blank=True, default='https://linkedin.com', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PayoutAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wallet_type', models.CharField(blank=True, choices=[('momo', 'Mobile Money'), ('bank', 'Bank')], max_length=50, null=True)),
                ('wallet_provider', models.CharField(blank=True, max_length=50, null=True)),
                ('account_name', models.CharField(blank=True, max_length=50, null=True)),
                ('account_number', models.CharField(blank=True, max_length=20, null=True)),
                ('account_currency', models.CharField(blank=True, default='ZMW', max_length=50, null=True)),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bank', to='accounts.creatorprofile')),
            ],
        ),
    ]
